diff -Naur gcc-6.4.0.old/libgcc/config/aarch64/linux-unwind.h gcc-6.4.0/libgcc/config/aarch64/linux-unwind.h
--- gcc-6.4.0.old/libgcc/config/aarch64/linux-unwind.h	2017-11-01 16:24:20.799900025 +0100
+++ gcc-6.4.0/libgcc/config/aarch64/linux-unwind.h	2017-11-01 16:26:33.372382491 +0100
@@ -52,7 +52,7 @@
   struct rt_sigframe
   {
     siginfo_t info;
-    struct ucontext uc;
+    ucontext_t uc;
   };
 
   struct rt_sigframe *rt_;
diff -Naur gcc-6.4.0.old/libgcc/config/alpha/linux-unwind.h gcc-6.4.0/libgcc/config/alpha/linux-unwind.h
--- gcc-6.4.0.old/libgcc/config/alpha/linux-unwind.h	2017-11-01 16:24:20.795899950 +0100
+++ gcc-6.4.0/libgcc/config/alpha/linux-unwind.h	2017-11-01 16:26:33.373382509 +0100
@@ -51,7 +51,7 @@
     {
       struct rt_sigframe {
 	siginfo_t info;
-	struct ucontext uc;
+	ucontext_t uc;
       } *rt_ = context->cfa;
       sc = &rt_->uc.uc_mcontext;
     }
diff -Naur gcc-6.4.0.old/libgcc/config/bfin/linux-unwind.h gcc-6.4.0/libgcc/config/bfin/linux-unwind.h
--- gcc-6.4.0.old/libgcc/config/bfin/linux-unwind.h	2017-11-01 16:24:20.824900493 +0100
+++ gcc-6.4.0/libgcc/config/bfin/linux-unwind.h	2017-11-01 16:26:33.374382528 +0100
@@ -52,7 +52,7 @@
 	void *puc;
 	char retcode[8];
 	siginfo_t info;
-	struct ucontext uc;
+	ucontext_t uc;
       } *rt_ = context->cfa;
 
       /* The void * cast is necessary to avoid an aliasing warning.
diff -Naur gcc-6.4.0.old/libgcc/config/i386/linux-unwind.h gcc-6.4.0/libgcc/config/i386/linux-unwind.h
--- gcc-6.4.0.old/libgcc/config/i386/linux-unwind.h	2017-11-01 16:24:20.799900025 +0100
+++ gcc-6.4.0/libgcc/config/i386/linux-unwind.h	2017-11-01 16:26:33.375382547 +0100
@@ -58,7 +58,7 @@
   if (*(unsigned char *)(pc+0) == 0x48
       && *(unsigned long long *)(pc+1) == RT_SIGRETURN_SYSCALL)
     {
-      struct ucontext *uc_ = context->cfa;
+      ucontext_t *uc_ = context->cfa;
       /* The void * cast is necessary to avoid an aliasing warning.
          The aliasing warning is correct, but should not be a problem
          because it does not alias anything.  */
@@ -138,7 +138,7 @@
 	siginfo_t *pinfo;
 	void *puc;
 	siginfo_t info;
-	struct ucontext uc;
+	ucontext_t uc;
       } *rt_ = context->cfa;
       /* The void * cast is necessary to avoid an aliasing warning.
          The aliasing warning is correct, but should not be a problem
diff -Naur gcc-6.4.0.old/libgcc/config/m68k/linux-unwind.h gcc-6.4.0/libgcc/config/m68k/linux-unwind.h
--- gcc-6.4.0.old/libgcc/config/m68k/linux-unwind.h	2017-11-01 16:24:20.798900006 +0100
+++ gcc-6.4.0/libgcc/config/m68k/linux-unwind.h	2017-11-01 16:26:33.377382584 +0100
@@ -33,7 +33,7 @@
 /* <sys/ucontext.h> is unfortunately broken right now.  */
 struct uw_ucontext {
 	unsigned long	  uc_flags;
-	struct ucontext  *uc_link;
+	ucontext_t  *uc_link;
 	stack_t		  uc_stack;
 	mcontext_t	  uc_mcontext;
 	unsigned long	  uc_filler[80];
diff -Naur gcc-6.4.0.old/libgcc/config/mips/linux-unwind.h gcc-6.4.0/libgcc/config/mips/linux-unwind.h
--- gcc-6.4.0.old/libgcc/config/mips/linux-unwind.h	2017-11-01 16:24:20.820900419 +0100
+++ gcc-6.4.0/libgcc/config/mips/linux-unwind.h	2017-11-01 16:26:33.377382584 +0100
@@ -31,7 +31,7 @@
 
 /* The third parameter to the signal handler points to something with
  * this structure defined in asm/ucontext.h, but the name clashes with
- * struct ucontext from sys/ucontext.h so this private copy is used.  */
+ * ucontext_t from sys/ucontext.h so this private copy is used.  */
 typedef struct _sig_ucontext {
     unsigned long         uc_flags;
     struct _sig_ucontext  *uc_link;
diff -Naur gcc-6.4.0.old/libgcc/config/nios2/linux-unwind.h gcc-6.4.0/libgcc/config/nios2/linux-unwind.h
--- gcc-6.4.0.old/libgcc/config/nios2/linux-unwind.h	2017-11-01 16:24:20.822900456 +0100
+++ gcc-6.4.0/libgcc/config/nios2/linux-unwind.h	2017-11-01 16:26:33.378382603 +0100
@@ -38,7 +38,7 @@
 
 struct nios2_ucontext {
   unsigned long uc_flags;
-  struct ucontext *uc_link;
+  ucontext_t *uc_link;
   stack_t uc_stack;
   struct nios2_mcontext uc_mcontext;
   sigset_t uc_sigmask;	/* mask last for extensibility */
diff -Naur gcc-6.4.0.old/libgcc/config/pa/linux-unwind.h gcc-6.4.0/libgcc/config/pa/linux-unwind.h
--- gcc-6.4.0.old/libgcc/config/pa/linux-unwind.h	2017-11-01 16:24:20.818900381 +0100
+++ gcc-6.4.0/libgcc/config/pa/linux-unwind.h	2017-11-01 16:26:33.379382621 +0100
@@ -80,7 +80,7 @@
   struct sigcontext *sc;
   struct rt_sigframe {
     siginfo_t info;
-    struct ucontext uc;
+    ucontext_t uc;
   } *frame;
 
   /* rt_sigreturn trampoline:
diff -Naur gcc-6.4.0.old/libgcc/config/s390/linux-unwind.h gcc-6.4.0/libgcc/config/s390/linux-unwind.h
--- gcc-6.4.0.old/libgcc/config/s390/linux-unwind.h	2017-11-01 16:24:20.796899969 +0100
+++ gcc-6.4.0/libgcc/config/s390/linux-unwind.h	2017-11-01 16:26:33.382382678 +0100
@@ -77,10 +77,10 @@
      ucontext (contains sigregs)  */
   else if (pc[1] == 173 /* __NR_rt_sigreturn */)
     {
-      struct ucontext_
+      ucontext_t_
       {
 	unsigned long     uc_flags;
-	struct ucontext_ *uc_link;
+	ucontext_t_ *uc_link;
 	unsigned long     uc_stack[3];
 	sigregs_          uc_mcontext;
       } *uc = context->cfa + 8 + 128;
diff -Naur gcc-6.4.0.old/libgcc/config/sh/linux-unwind.h gcc-6.4.0/libgcc/config/sh/linux-unwind.h
--- gcc-6.4.0.old/libgcc/config/sh/linux-unwind.h	2017-11-01 16:24:20.804900119 +0100
+++ gcc-6.4.0/libgcc/config/sh/linux-unwind.h	2017-11-01 16:26:33.383382696 +0100
@@ -83,7 +83,7 @@
 	siginfo_t *pinfo;
 	void *puc;
 	siginfo_t info;
-	struct ucontext uc;
+	ucontext_t uc;
       } *rt_ = context->cfa;
       /* The void * cast is necessary to avoid an aliasing warning.
          The aliasing warning is correct, but should not be a problem
@@ -180,7 +180,7 @@
     {
       struct rt_sigframe {
 	siginfo_t info;
-	struct ucontext uc;
+	ucontext_t uc;
       } *rt_ = context->cfa;
       /* The void * cast is necessary to avoid an aliasing warning.
          The aliasing warning is correct, but should not be a problem
diff -Naur gcc-6.4.0.old/libgcc/config/tilepro/linux-unwind.h gcc-6.4.0/libgcc/config/tilepro/linux-unwind.h
--- gcc-6.4.0.old/libgcc/config/tilepro/linux-unwind.h	2017-11-01 16:24:20.804900119 +0100
+++ gcc-6.4.0/libgcc/config/tilepro/linux-unwind.h	2017-11-01 16:26:33.385382734 +0100
@@ -61,7 +61,7 @@
   struct rt_sigframe {
     unsigned char save_area[C_ABI_SAVE_AREA_SIZE];
     siginfo_t info;
-    struct ucontext uc;
+    ucontext_t uc;
   } *rt_;
 
   /* Return if this is not a signal handler.  */
diff -Naur gcc-6.4.0.old/libgcc/config/xtensa/linux-unwind.h gcc-6.4.0/libgcc/config/xtensa/linux-unwind.h
--- gcc-6.4.0.old/libgcc/config/xtensa/linux-unwind.h	2017-11-01 16:24:20.819900400 +0100
+++ gcc-6.4.0/libgcc/config/xtensa/linux-unwind.h	2017-11-01 16:26:33.385382734 +0100
@@ -67,7 +67,7 @@
 
   struct rt_sigframe {
     siginfo_t info;
-    struct ucontext uc;
+    ucontext_t uc;
   } *rt_;
 
   /* movi a2, __NR_rt_sigreturn; syscall */
